# Test code in this repo.
resources:
- repo: 'self'

# Use the default queue for simplicity.
queue:
  name: 'Default'

# Only trigger build on master or for a PR
trigger:
- master
- refs/pull/*

steps:
 
# If this is a PR build, change the Build.SourceBranch to be the Pull Request Source.
- task: jessehouwing.jessehouwing-vsts-variable-tasks.vsts-variable-set.VariableSetTask@1
  displayName: "PR-only HACK: Set variable: Build.SourceBranch to: $(System.PullRequest.SourceBranch)"
  inputs:
    VariableName: Build.SourceBranch
    Value: $(System.PullRequest.SourceBranch)
  condition: eq(variables['Build.Reason'], 'PullRequest')

# If this is a PR build, change Build.SourceVersion to: refs/remotes/origin/...
- task: jessehouwing.jessehouwing-vsts-variable-tasks.vsts-variable-transform.VariableTransformTask@1
  displayName: "PR-only HACK: Set variable: Build.SourceVersion to: refs/remotes/origin/..."
  inputs:
    value: $(Build.SourceBranch)
    variableName: Build.SourceVersion
    searchReplace: true
    searchReplaceMethod: regex
    searchValue: '^refs/heads/'
    replacementValue: refs/remotes/origin/
  condition: eq(variables['Build.Reason'], 'PullRequest')

# When queueing the Jenkins job, must pass source branch (PR merge branch/commit is invalid).
- task: JenkinsQueueJob@2
  displayName: 'Queue Jenkins job'
  inputs:
    serverEndpoint: 'ps-jenkins.aslab.juniper.net'
    # TODO: (If copied) -- Specify the new job on Jenkins (copy from api-gateway and update).
    #       Remember to correct this name too!
    jobName: 'robot-runner'
    isParameterizedJob: 'true'
    jobParameters: |
      SOURCE_BRANCH=$(Build.SourceBranch)